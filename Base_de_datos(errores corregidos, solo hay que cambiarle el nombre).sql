-- MySQL Script generated by MySQL Workbench
-- Thu Oct 26 08:51:38 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema pppppppppp
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema pppppppppp
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `pppppppppp` DEFAULT CHARACTER SET utf8 ;
USE `pppppppppp` ;

-- -----------------------------------------------------
-- Table `pppppppppp`.`Paises`
-- -----------------------------------------------------

CREATE TABLE IF NOT EXISTS `pppppppppp`.`Paises` (
  `id_Pais` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `nombre_Pais` VARCHAR(45) NULL,
  CONSTRAINT pk_id_Pais PRIMARY KEY (`id_Pais`),
  UNIQUE INDEX `nombre_UNIQUE` (`nombre_Pais` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pppppppppp`.`Provincias`
-- -----------------------------------------------------

CREATE TABLE IF NOT EXISTS `pppppppppp`.`Provincias` (
  `id_Provincia` INT NOT NULL AUTO_INCREMENT,
  `nombre_Provincia` VARCHAR(45) NULL,
  `id_Pais` INT UNSIGNED NOT NULL,
  CONSTRAINT pk_id_Provincia PRIMARY KEY (`id_Provincia`),
  UNIQUE INDEX `nombre_Provincia_UNIQUE` (`nombre_Provincia` ASC),
  INDEX `fk_id_Pais_idx` (`id_Pais` ASC),
  CONSTRAINT `fk_id_Pais`
	FOREIGN KEY (`id_Pais`)
    REFERENCES `pppppppppp`.`Paises` (`id_Pais`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pppppppppp`.`Localidades`
-- -----------------------------------------------------

CREATE TABLE IF NOT EXISTS `pppppppppp`.`Localidades` (
  `id_Localidad` INT NOT NULL AUTO_INCREMENT,
  `nombre_Localidad` VARCHAR(45) NULL,
  `id_Provincia` INT NOT NULL,
  CONSTRAINT pk_id_Localidad PRIMARY KEY (`id_Localidad`),
  UNIQUE INDEX `nombre_Localidad_UNIQUE` (`nombre_Localidad` ASC),
  INDEX `fk_id_Provincia_idx` (`id_Provincia` ASC),
	
  CONSTRAINT `fk_id_Provincia`
    FOREIGN KEY (`id_Provincia`)
    REFERENCES `pppppppppp`.`Provincias` (`id_Provincia`)
    ON DELETE RESTRICT
    ON UPDATE NO ACTION);

-- -----------------------------------------------------
-- Table `pppppppppp`.`Sucursales`
-- -----------------------------------------------------

CREATE TABLE IF NOT EXISTS `pppppppppp`.`Sucursales` (
  `id_Sucursal` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `nombre_Sucursal` VARCHAR(45) NULL,
  `direccion` VARCHAR(45) NOT NULL,
  `telefono` VARCHAR(50) NOT NULL,
  CONSTRAINT pk_id_Sucursal PRIMARY KEY (`id_Sucursal`),
  UNIQUE INDEX `nombre_Sucursal_UNIQUE` (`nombre_Sucursal` ASC)
  );


-- -----------------------------------------------------
-- Table `pppppppppp`.`Tipos_Cervezas`
-- -----------------------------------------------------

CREATE TABLE IF NOT EXISTS `pppppppppp`.`Tipos_Cervezas` (
  `id_Tipo_Cerveza` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `nombre_Tipo_Cerveza` VARCHAR(45) NOT NULL,
  `descripcion` VARCHAR(1000) NULL,
  `precio_Litro` INT UNSIGNED NOT NULL,
  CONSTRAINT pk_id_Tipo_Cerveza PRIMARY KEY (`id_Tipo_Cerveza`),
  UNIQUE INDEX `nombre_Tipo_Cerveza_UNIQUE` (`nombre_Tipo_Cerveza` ASC));


-- -----------------------------------------------------
-- Table `pppppppppp`.`Productos`
-- -----------------------------------------------------

CREATE TABLE IF NOT EXISTS `pppppppppp`.`Productos` (
  `id_Producto` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `nombre_Producto` VARCHAR(45) NOT NULL,
  `factor` VARCHAR(45) NULL,
  `capacidad` VARCHAR(45) NOT NULL,
  `id_Tipo_Cerveza` INT UNSIGNED NOT NULL,
  `foto` VARCHAR(200) NULL,
  CONSTRAINT pk_id_Producto PRIMARY KEY (`id_Producto`),
  UNIQUE INDEX `producto_UNIQUE` (`nombre_Producto` ASC, `capacidad` ASC),
  INDEX `fk_id_Tipo_idx` (`id_Tipo_Cerveza` ASC),
  CONSTRAINT `fk_id_Tipo`
    FOREIGN KEY (`id_Tipo_Cerveza`)
    REFERENCES `pppppppppp`.`Tipos_Cervezas` (`id_Tipo_Cerveza`)
    ON DELETE CASCADE
    ON UPDATE CASCADE);

-- -----------------------------------------------------
-- Table `pppppppppp`.`Tipos_Usuarios`
-- -----------------------------------------------------

CREATE TABLE IF NOT EXISTS `pppppppppp`.`Tipos_Usuarios` (
	`id_Tipo_Usuario` INT UNSIGNED NOT NULL AUTO_INCREMENT,
    `nombre_Tipo_Usuario` VARCHAR(45) NOT NULL,
    CONSTRAINT pk_id_Tipo_Usuario PRIMARY KEY (`id_Tipo_Usuario`),
    UNIQUE INDEX `nombre_UNIQUE` (`nombre_Tipo_Usuario` ASC)
);

-- -----------------------------------------------------
-- Table `pppppppppp`.`Clientes`
-- -----------------------------------------------------

CREATE TABLE IF NOT EXISTS `pppppppppp`.`Clientes` (
  `id_Cliente` INT NOT NULL AUTO_INCREMENT,
  `nombre_Cliente` VARCHAR(45) NOT NULL,
  `apellido` VARCHAR(45) NOT NULL,
  `fecha_Nacimiento` DATE NOT NULL,
  `dni` VARCHAR(45) NOT NULL,
  `id_Localidad` INT NOT NULL,
  `direccion` VARCHAR(50) NOT NULL,
  `telefono` VARCHAR(50) NOT NULL,
	
  CONSTRAINT pk_id_Cliente PRIMARY KEY (`id_Cliente`),
  INDEX `fk_id_Localidad_idx` (`id_Localidad` ASC),
	
  CONSTRAINT `fk_id_Localidad`
    FOREIGN KEY (`id_Localidad`)
    REFERENCES `pppppppppp`.`Localidades` (`id_Localidad`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE);


-- -----------------------------------------------------
-- Table `pppppppppp`.`Usuarios`
-- -----------------------------------------------------

CREATE TABLE IF NOT EXISTS `pppppppppp`.`Cuentas` (
  `id_Usuario` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(45) NOT NULL,
  `contrasenia` VARCHAR(45) NOT NULL,
  `foto_Perfil` VARCHAR(45) NULL,
  `id_Cliente` INT NOT NULL,
  `id_Tipo_Usuario` INT UNSIGNED NOT NULL,
  CONSTRAINT pk_id_Usuario PRIMARY KEY (`id_Usuario`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC),
  INDEX `fk_id_Cliente_idx` (`id_Cliente` ASC),
	
  CONSTRAINT `fk_id_Cliente`
    FOREIGN KEY (`id_Cliente`)
    REFERENCES `pppppppppp`.`Clientes` (`id_Cliente`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
	
  CONSTRAINT `fk_id_Tipo_Usuario`
    FOREIGN KEY (`id_Tipo_Usuario`)
    REFERENCES `pppppppppp`.`Tipos_Usuarios` (`id_Tipo_Usuario`)  -- no se si va Tipos_Usuarios o que. (antes en ese lugar tenia Clientes, pero daba error)
    ON DELETE CASCADE
    ON UPDATE CASCADE);

-- -----------------------------------------------------
-- Table `pppppppppp`.`Pedidos`
-- -----------------------------------------------------

CREATE TABLE IF NOT EXISTS `pppppppppp`.`Pedidos` (
  `id_Pedido` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `id_Titular` INT NOT NULL,							-- aca tuve que QUITAR el unsigned porque sino no andaba.
  `id_Sucursal` INT UNSIGNED NOT NULL,					-- al contrario de la anterior sentencia, aca tuve que AGREGARLE el unsigned porque sino no andaba.
  `precio_Total` VARCHAR(45) NOT NULL,
  `estado` VARCHAR(50) NOT NULL,
  `fecha` VARCHAR(50) NOT NULL,
  CONSTRAINT pk_id_Pedido PRIMARY KEY (`id_Pedido`),
  INDEX `fk_id_Titular_idx` (`id_Titular` ASC),
  INDEX `fk_id_Sucursal_idx` (`id_Sucursal` ASC),
	
  CONSTRAINT `fk_id_Titular`
    FOREIGN KEY (`id_Titular`)
    REFERENCES `pppppppppp`.`Clientes` (`id_Cliente`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
	
  CONSTRAINT `fk_id_Sucursal`
    FOREIGN KEY (`id_Sucursal`)
    REFERENCES `pppppppppp`.`Sucursales` (`id_Sucursal`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE);


-- -----------------------------------------------------
-- Table `pppppppppp`.`Lineas_Pedidos`
-- -----------------------------------------------------

CREATE TABLE IF NOT EXISTS `pppppppppp`.`Lineas_Pedidos` (
  `id_Linea_Pedido` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `id_Producto` INT UNSIGNED NOT NULL,
  `id_Pedido` INT UNSIGNED NOT NULL,
  `cantidad` INT UNSIGNED NOT NULL,
  `subtotal` VARCHAR(45) NOT NULL,
  CONSTRAINT pk_id_Linea_Pedido PRIMARY KEY (`id_Linea_Pedido`),
  INDEX `fk_id_Producto_idx` (`id_Producto` ASC),
  INDEX `fk_id_Pedido_idx` (`id_Pedido` ASC),
  CONSTRAINT `fk_id_Producto`
    FOREIGN KEY (`id_Producto`)
    REFERENCES `pppppppppp`.`Productos` (`id_Producto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_id_Pedido`
    FOREIGN KEY (`id_Pedido`)
    REFERENCES `pppppppppp`.`Pedidos` (`id_Pedido`)
    ON DELETE CASCADE
    ON UPDATE CASCADE);


-- -----------------------------------------------------
-- Table `pppppppppp`.`Envios`
-- -----------------------------------------------------

CREATE TABLE IF NOT EXISTS `pppppppppp`.`Envios` (
  `id_Envio` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `direccion` VARCHAR(50) NOT NULL,
  `id_Pedido` INT UNSIGNED NOT NULL,
  `fecha_Emitida` VARCHAR(50) NOT NULL,
  `hora_Emitida` VARCHAR(45) NOT NULL,
  CONSTRAINT pk_id_Envio PRIMARY KEY (`id_Envio`),
  INDEX `fk_id_Pedido_idx` (`id_Pedido` ASC),
	
  CONSTRAINT `fk_id_Pedido_x_envio`
    FOREIGN KEY (`id_Pedido`)
    REFERENCES `pppppppppp`.`Pedidos` (`id_Pedido`)
    ON DELETE CASCADE
    ON UPDATE CASCADE);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
        

INSERT INTO Paises (nombre_Pais) VALUES ('Argentina'), ('Chile'), ('Uruguay'), ('Paraguay'), ('Bolivia');
INSERT INTO Provincias(nombre_Provincia, id_Pais) VALUES ('Buenos Aires', 1), ('Jujuy', 1),
			 ('Salta', 1), ('Tucuman', 1), ('Chaco', 1), ('Santiago del Estero', 1), ('La Rioja', 1),
			 ('Formosa', 1), ('Corrientes', 1), ('Misiones', 1), ('Entre Rios', 1), ('Santa Fe', 1),
              ('CÃ³rdoba', 1), ('San Luis', 1), ('San Juan', 1), ('Catamarca', 1), ('Neuquen', 1),
               ('La Pampa', 1), ('Rio Negro', 1), ('Chubut', 1), ('Santa Cruz', 1), ('Tierra del Fuego', 1),
                ('Cuidad AutÃ³noma de Buenos Aires', 1), ('Mendoza', 1);

SELECT * FROM Provincias;

INSERT INTO Localidades(nombre_Localidad, id_Provincia) VALUES ('Mar del Plata', 1), ('La Plata', 1), ('San Salvador de Jujuy', 2), 
			('Salta', 3), ('San Miguel de TucumÃ¡n', 4), ('Resistencia', 5), ('Santiago del Estero', 6), ('La Rioja', 7), ('Formosa', 8),
            ('Corrientes', 9), ('Posadas', 10), ('ParanÃ¡', 11), ('Santa Fe', 12), ('CÃ³rdoba', 13), ('San Luis', 14), ('San Juan', 15),
            ('San Fernando del Valle de Catamarca', 16), ('NeuquÃ©n', 17), ('Santa Rosa', 18), ('Viedma', 19), ('Rawson', 20),
            ('RÃ­o Gallegos', 21), ('Ushuaia', 22), ('Mendoza', 24);
            
INSERT INTO Tipos_Usuarios(nombre_Tipo_Usuario) VALUES ('Administrador'), ('Cliente');
INSERT INTO Clientes (nombre_Cliente, apellido, fecha_Nacimiento, dni, id_Localidad, direccion, telefono) VALUES ('Eduardo', 'Munoz', '1989-06-03', '5807930' ,1, 'Coronel Suarez 3226', '2234700568');
INSERT INTO Cuentas (email, contrasenia, id_Cliente, id_Tipo_Usuario) VALUES ('admin@admin.com', '1unq2fpoc', 1, 1);





INSERT INTO Tipos_Cervezas (nombre_Tipo_Cerveza, descripcion, precio_Litro) VALUES ('Rubia', 'Saborizada con miel', 25), ('Negra', 'Saborizada con canela', 31);
INSERT INTO Productos (nombre_Producto, factor, capacidad, id_Tipo_Cerveza, foto) VALUES ('Quilmes', '250', '250', '1', '/proyectos/Trabajo_Final/Imagenes/Productos/quilmes.png'),
																						 ('Quilmes', '500', '500', '1', '/proyectos/Trabajo_Final/Imagenes/Productos/quilmes.png'),
																						 ('Pilsener', '1500', '1500', '2', '/proyectos/Trabajo_Final/Imagenes/Productos/pilsener.png'),
																						 ('Pilsener', '750', '750', '2', '/proyectos/Trabajo_Final/Imagenes/Productos/pilsener.png'),
																						 ('Corona', '2000', '2000', '1', '/proyectos/Trabajo_Final/Imagenes/Productos/corona.png'),
																						 ('Heineken', '1500', '1500', '2', '/proyectos/Trabajo_Final/Imagenes/Productos/heineken.png'),
																						 ('Heineken', '1000', '1000', '2', '/proyectos/Trabajo_Final/Imagenes/Productos/heineken.png'),
																						 ('Heineken', '2000', '2000', '2', '/proyectos/Trabajo_Final/Imagenes/Productos/heineken.png');
SELECT * FROM clientes;
SELECT * FROM pedidos;